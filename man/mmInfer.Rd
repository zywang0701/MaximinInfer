% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MaximinInference.R
\name{mmInfer}
\alias{mmInfer}
\title{Inference for Ridge-Penalized Maximin Effect}
\usage{
mmInfer(
  X.source,
  Y.source,
  idx.source,
  loading,
  X.target = NULL,
  cov.target = NULL,
  covariate.shift = TRUE,
  split = FALSE,
  lam.value = "CV.min",
  intercept = TRUE,
  delta = -1,
  gen.size = 500,
  threshold = 1,
  alpha = 0.01
)
}
\arguments{
\item{X.source}{Design matrix of source data, consisting of multi-groups.}

\item{Y.source}{Outcome vector of source data, consisting of multi-groups.}

\item{idx.source}{Index vector of source data, each element indicates the group from which the sample is drawn}

\item{loading}{Loading, the linear contrast of interest}

\item{X.target}{Design matrix of target data, the function investigates source data only if \code{NULL} (default = \code{NULL})}

\item{cov.target}{Covariance matrix for target data, the covariance is unkown if \code{NULL} (default = \code{NULL})}

\item{covariate.shift}{Covariate is shifted or not between target and source data (default = \code{TRUE})}

\item{split}{Samples splitted or not to fit algorithm (default = \code{FALSE})}

\item{lam.value}{The tuning parameter in the construction of LASSO estimator (default = "CV.min")}

\item{intercept}{Should intercept(s) be fitted or not (default = \code{TRUE})}

\item{delta}{The ridge penalty level, -1 indicates a data-dependent way to decide the penalty (default = -1)}

\item{gen.size}{The number of generated samples for inference (default = 500)}

\item{threshold}{version of selecting generated samples}

\item{alpha}{confidence value}
}
\value{
\item{mm.est}{The estimator of maximin effects}
\item{weights}{The weights of groups, sum up to 1}
\item{point.est}{The point estimator of the linear contrast}
\item{CI}{Confidence Interval for the linear contrast}
\item{CI.length}{Length of the confidence interval}
}
\description{
This function is used to compute the bias corrected estimator of ridge-penalized maximin effect and
the point estimator of its linear contrast. It also constructs the confidence interval for the linear contrast.
}
\examples{
L=2
p=100
n=200
n.target=200
A1gen <- function(rho,p){
  A1=matrix(0,p,p)
  for(i in 1:p){
    for(j in 1:p){
      A1[i,j]<-rho^(abs(i-j))
    }
  }
  return(A1)
}
Bs = matrix(0, p, L)
Bs[1:10,1] = seq(1:10)/40
Bs[1:10,2] = -seq(1:10)/40
cov.source = A1gen(0.6, p)
cov.target = cov.source
diag(cov.target) = diag(cov.target) + 0.2
for(i in 1:5){
  for(j in 1:5){
    if(i!=j) cov.target[i, j] = 0.9
  }
}
X.source = MASS::mvrnorm(n*L, mu=rep(0,p), Sigma=cov.source)
X.target = MASS::mvrnorm(n.target, mu=rep(0,p), Sigma=cov.target)
idx.source = rep(1:L, times=rep(n,L))
Y.source = rep(0, n*L)
for(l in 1:L) Y.source[seq((l-1)*n+1, l*n)] = X.source[seq((l-1)*n+1, l*n), ] \%*\% Bs[,l] + rnorm(n)
loading = rep(0, p)
loading[1:5] = 1
mmList <- mmInfer(X.source, Y.source, idx.source, loading, X.target, cov.target=NULL,
                  covariate.shift=TRUE, split=FALSE, delta=-1, gen.size=50)
}
